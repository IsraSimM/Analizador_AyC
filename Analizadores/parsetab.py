
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIDIVIDEAMPERSAND CADENA CARACTER CHAR COMA COMPARADOR CORCHETEDER CORCHETEIZQ DIVIDE ELSE FLOAT FOR IDENTIFICADOR IF IGUAL INCLUDE LLLAVE LPAREN MULTI NUMERO PRINTF PUNTO PUNTOYCOMA RESTA RLLAVE RPAREN SCANF SUMA TIPODATOprogram : preprocessor_directive_list function_definition_listpreprocessor_directive_list : preprocessor_directive\n                                   | preprocessor_directive preprocessor_directive_listpreprocessor_directive : INCLUDEfunction_definition_list : function_definition\n                                | function_definition function_definition_listfunction_definition : TIPODATO IDENTIFICADOR LPAREN parameter_list RPAREN blockparameter_list : declaration\n                      | declaration COMA parameter_list\n                      | emptyblock : LLLAVE RLLAVE\n             | LLLAVE statement_list RLLAVEstatement_list : statement\n                      | statement statement_liststatement : for_statement\n                 | assignment_statement\n                 | printf_statement\n                 | scanf_statement\n                 | declaration\n                 | if_statement\n                 | else_statement\n                 | function_calldeclaration : TIPODATO identificador_list PUNTOYCOMA\n                   | TIPODATO IDENTIFICADOR IGUAL expression PUNTOYCOMA\n                   | TIPODATO IDENTIFICADOR CORCHETEIZQ NUMERO CORCHETEDER PUNTOYCOMAidentificador_list : IDENTIFICADOR\n                          | IDENTIFICADOR COMA identificador_listassignment_statement : IDENTIFICADOR IGUAL expression PUNTOYCOMA\n                            | IDENTIFICADOR CORCHETEIZQ expression CORCHETEDER IGUAL expression PUNTOYCOMAexpression : expression SUMA expression\n                  | expression RESTA expression\n                  | expression MULTI expression\n                  | expression DIVIDE expression\n                  | NUMERO\n                  | IDENTIFICADOR\n                  | CADENA\n                  | CARACTER\n                  | condition\n                  | LPAREN expression RPARENfunction_call : IDENTIFICADOR LPAREN RPAREN PUNTOYCOMAprintf_statement : PRINTF LPAREN CADENA RPAREN PUNTOYCOMA\n                        | PRINTF LPAREN CADENA COMA expression RPAREN PUNTOYCOMAscanf_statement : SCANF LPAREN CADENA COMA AMPERSAND IDENTIFICADOR RPAREN PUNTOYCOMAif_statement : IF LPAREN condition RPAREN blockelse_statement : ELSE blockfor_statement : FOR LPAREN assignment_statement condition PUNTOYCOMA assignment_statement RPAREN blockcondition : expression COMPARADOR expressionempty :'
    
_lr_action_items = {'INCLUDE':([0,3,4,],[4,4,-4,]),'$end':([1,5,6,9,24,37,62,],[0,-1,-5,-6,-7,-11,-12,]),'TIPODATO':([2,3,4,6,8,11,19,20,24,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[7,-2,-4,7,-3,12,12,-23,-7,12,-11,12,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'IDENTIFICADOR':([7,12,20,21,23,25,33,37,39,40,41,42,43,44,45,46,47,54,55,56,57,58,59,62,64,65,66,70,71,78,79,89,91,93,96,97,98,100,101,107,108,110,111,],[10,17,-23,27,35,49,27,-11,49,-15,-16,-17,-18,-19,-20,-21,-22,-24,27,27,27,27,27,-12,80,27,27,27,-45,-25,27,-28,-40,27,80,27,-41,105,-44,-29,-42,-46,-43,]),'LPAREN':([10,21,33,48,49,50,51,52,55,56,57,58,59,65,66,70,79,89,93,97,107,],[11,33,33,64,67,68,69,70,33,33,33,33,33,33,33,33,33,-28,33,33,-29,]),'RPAREN':([11,13,14,15,19,20,26,27,29,30,31,32,54,60,67,72,73,74,75,76,77,78,84,86,89,99,102,105,107,],[-48,18,-8,-10,-48,-23,-9,-35,-34,-36,-37,-38,-24,77,83,-30,-31,-32,-33,-47,-39,-25,92,95,-28,104,106,109,-29,]),'COMA':([14,17,20,35,54,78,84,85,],[19,23,-23,23,-24,-25,93,94,]),'PUNTOYCOMA':([16,17,27,28,29,30,31,32,35,36,61,72,73,74,75,76,77,81,83,88,92,103,104,109,],[20,-26,-35,54,-34,-36,-37,-38,-26,-27,78,-30,-31,-32,-33,-47,-39,89,91,96,98,107,108,111,]),'IGUAL':([17,49,80,90,],[21,65,65,97,]),'CORCHETEIZQ':([17,49,80,],[22,66,66,]),'LLLAVE':([18,53,95,106,],[25,25,25,25,]),'FOR':([20,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[-23,48,-11,48,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'PRINTF':([20,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[-23,50,-11,50,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'SCANF':([20,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[-23,51,-11,51,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'IF':([20,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[-23,52,-11,52,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'ELSE':([20,25,37,39,40,41,42,43,44,45,46,47,54,62,71,78,89,91,98,101,107,108,110,111,],[-23,53,-11,53,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'RLLAVE':([20,25,37,38,39,40,41,42,43,44,45,46,47,54,62,63,71,78,89,91,98,101,107,108,110,111,],[-23,37,-11,62,-13,-15,-16,-17,-18,-19,-20,-21,-22,-24,-12,-14,-45,-25,-28,-40,-41,-44,-29,-42,-46,-43,]),'NUMERO':([21,22,33,55,56,57,58,59,65,66,70,79,89,93,97,107,],[29,34,29,29,29,29,29,29,29,29,29,29,-28,29,29,-29,]),'CADENA':([21,33,55,56,57,58,59,65,66,68,69,70,79,89,93,97,107,],[30,30,30,30,30,30,30,30,30,84,85,30,30,-28,30,30,-29,]),'CARACTER':([21,33,55,56,57,58,59,65,66,70,79,89,93,97,107,],[31,31,31,31,31,31,31,31,31,31,31,-28,31,31,-29,]),'SUMA':([27,28,29,30,31,32,60,72,73,74,75,76,77,81,82,86,87,88,99,103,],[-35,55,-34,-36,-37,-38,55,-30,-31,-32,-33,55,-39,55,55,-38,55,-38,55,55,]),'RESTA':([27,28,29,30,31,32,60,72,73,74,75,76,77,81,82,86,87,88,99,103,],[-35,56,-34,-36,-37,-38,56,-30,-31,-32,-33,56,-39,56,56,-38,56,-38,56,56,]),'MULTI':([27,28,29,30,31,32,60,72,73,74,75,76,77,81,82,86,87,88,99,103,],[-35,57,-34,-36,-37,-38,57,57,57,-32,-33,57,-39,57,57,-38,57,-38,57,57,]),'DIVIDE':([27,28,29,30,31,32,60,72,73,74,75,76,77,81,82,86,87,88,99,103,],[-35,58,-34,-36,-37,-38,58,58,58,-32,-33,58,-39,58,58,-38,58,-38,58,58,]),'COMPARADOR':([27,28,29,30,31,32,60,72,73,74,75,76,77,81,82,86,87,88,99,103,],[-35,59,-34,-36,-37,-38,59,-30,-31,-32,-33,59,-39,59,59,-38,59,-38,59,59,]),'CORCHETEDER':([27,29,30,31,32,34,72,73,74,75,76,77,82,],[-35,-34,-36,-37,-38,61,-30,-31,-32,-33,-47,-39,90,]),'AMPERSAND':([94,],[100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'preprocessor_directive_list':([0,3,],[2,8,]),'preprocessor_directive':([0,3,],[3,3,]),'function_definition_list':([2,6,],[5,9,]),'function_definition':([2,6,],[6,6,]),'parameter_list':([11,19,],[13,26,]),'declaration':([11,19,25,39,],[14,14,44,44,]),'empty':([11,19,],[15,15,]),'identificador_list':([12,23,],[16,36,]),'block':([18,53,95,106,],[24,71,101,110,]),'expression':([21,33,55,56,57,58,59,65,66,70,79,93,97,],[28,60,72,73,74,75,76,81,82,87,87,99,103,]),'condition':([21,33,55,56,57,58,59,65,66,70,79,93,97,],[32,32,32,32,32,32,32,32,32,86,88,32,32,]),'statement_list':([25,39,],[38,63,]),'statement':([25,39,],[39,39,]),'for_statement':([25,39,],[40,40,]),'assignment_statement':([25,39,64,96,],[41,41,79,102,]),'printf_statement':([25,39,],[42,42,]),'scanf_statement':([25,39,],[43,43,]),'if_statement':([25,39,],[45,45,]),'else_statement':([25,39,],[46,46,]),'function_call':([25,39,],[47,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> preprocessor_directive_list function_definition_list','program',2,'p_program','parser.py',12),
  ('preprocessor_directive_list -> preprocessor_directive','preprocessor_directive_list',1,'p_preprocessor_directive_list','parser.py',16),
  ('preprocessor_directive_list -> preprocessor_directive preprocessor_directive_list','preprocessor_directive_list',2,'p_preprocessor_directive_list','parser.py',17),
  ('preprocessor_directive -> INCLUDE','preprocessor_directive',1,'p_preprocessor_directive','parser.py',21),
  ('function_definition_list -> function_definition','function_definition_list',1,'p_function_definition_list','parser.py',25),
  ('function_definition_list -> function_definition function_definition_list','function_definition_list',2,'p_function_definition_list','parser.py',26),
  ('function_definition -> TIPODATO IDENTIFICADOR LPAREN parameter_list RPAREN block','function_definition',6,'p_function_definition','parser.py',30),
  ('parameter_list -> declaration','parameter_list',1,'p_parameter_list','parser.py',34),
  ('parameter_list -> declaration COMA parameter_list','parameter_list',3,'p_parameter_list','parser.py',35),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',36),
  ('block -> LLLAVE RLLAVE','block',2,'p_block','parser.py',40),
  ('block -> LLLAVE statement_list RLLAVE','block',3,'p_block','parser.py',41),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',45),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',46),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',50),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',51),
  ('statement -> printf_statement','statement',1,'p_statement','parser.py',52),
  ('statement -> scanf_statement','statement',1,'p_statement','parser.py',53),
  ('statement -> declaration','statement',1,'p_statement','parser.py',54),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',55),
  ('statement -> else_statement','statement',1,'p_statement','parser.py',56),
  ('statement -> function_call','statement',1,'p_statement','parser.py',57),
  ('declaration -> TIPODATO identificador_list PUNTOYCOMA','declaration',3,'p_declaration','parser.py',62),
  ('declaration -> TIPODATO IDENTIFICADOR IGUAL expression PUNTOYCOMA','declaration',5,'p_declaration','parser.py',63),
  ('declaration -> TIPODATO IDENTIFICADOR CORCHETEIZQ NUMERO CORCHETEDER PUNTOYCOMA','declaration',6,'p_declaration','parser.py',64),
  ('identificador_list -> IDENTIFICADOR','identificador_list',1,'p_identificador_list','parser.py',73),
  ('identificador_list -> IDENTIFICADOR COMA identificador_list','identificador_list',3,'p_identificador_list','parser.py',74),
  ('assignment_statement -> IDENTIFICADOR IGUAL expression PUNTOYCOMA','assignment_statement',4,'p_assignment_statement','parser.py',81),
  ('assignment_statement -> IDENTIFICADOR CORCHETEIZQ expression CORCHETEDER IGUAL expression PUNTOYCOMA','assignment_statement',7,'p_assignment_statement','parser.py',82),
  ('expression -> expression SUMA expression','expression',3,'p_expression','parser.py',86),
  ('expression -> expression RESTA expression','expression',3,'p_expression','parser.py',87),
  ('expression -> expression MULTI expression','expression',3,'p_expression','parser.py',88),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',89),
  ('expression -> NUMERO','expression',1,'p_expression','parser.py',90),
  ('expression -> IDENTIFICADOR','expression',1,'p_expression','parser.py',91),
  ('expression -> CADENA','expression',1,'p_expression','parser.py',92),
  ('expression -> CARACTER','expression',1,'p_expression','parser.py',93),
  ('expression -> condition','expression',1,'p_expression','parser.py',94),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',95),
  ('function_call -> IDENTIFICADOR LPAREN RPAREN PUNTOYCOMA','function_call',4,'p_function_call','parser.py',104),
  ('printf_statement -> PRINTF LPAREN CADENA RPAREN PUNTOYCOMA','printf_statement',5,'p_printf_statement','parser.py',108),
  ('printf_statement -> PRINTF LPAREN CADENA COMA expression RPAREN PUNTOYCOMA','printf_statement',7,'p_printf_statement','parser.py',109),
  ('scanf_statement -> SCANF LPAREN CADENA COMA AMPERSAND IDENTIFICADOR RPAREN PUNTOYCOMA','scanf_statement',8,'p_scanf_statement','parser.py',113),
  ('if_statement -> IF LPAREN condition RPAREN block','if_statement',5,'p_if_statement','parser.py',117),
  ('else_statement -> ELSE block','else_statement',2,'p_else_statement','parser.py',121),
  ('for_statement -> FOR LPAREN assignment_statement condition PUNTOYCOMA assignment_statement RPAREN block','for_statement',8,'p_for_statement','parser.py',125),
  ('condition -> expression COMPARADOR expression','condition',3,'p_condition','parser.py',129),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',133),
]
