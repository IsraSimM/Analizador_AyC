Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOT

Grammar

Rule 0     S' -> program
Rule 1     program -> preprocesor_directives_list function
Rule 2     program -> function
Rule 3     preprocesor_directives_list -> preprocesor_directive preprocesor_directives_list
Rule 4     preprocesor_directives_list -> preprocesor_directive
Rule 5     preprocesor_directive -> INCLUDE HEADER
Rule 6     function -> INT MAIN LPAREN RPAREN LBRACE statement_list RBRACE
Rule 7     statement_list -> statement statement_list
Rule 8     statement_list -> statement
Rule 9     statement -> declaration
Rule 10    statement -> assignment
Rule 11    statement -> for_loop
Rule 12    statement -> if_statement
Rule 13    statement -> function_call
Rule 14    statement -> return_statement
Rule 15    identifier_list -> IDENTIFIER
Rule 16    identifier_list -> IDENTIFIER COMMA identifier_list
Rule 17    declaration -> type_specifier IDENTIFIER EQUAL expression SEMICOLON
Rule 18    declaration -> type_specifier identifier_list SEMICOLON
Rule 19    declaration -> type_specifier identifier_list LBRAKET NUMBER RBRAKET SEMICOLON
Rule 20    type_specifier -> INT
Rule 21    type_specifier -> FLOAT
Rule 22    type_specifier -> CHAR
Rule 23    compound_assignment -> PLUS EQUAL
Rule 24    compound_assignment -> MINUS EQUAL
Rule 25    compound_assignment -> TIMES EQUAL
Rule 26    compound_assignment -> DIVIDE EQUAL
Rule 27    assignment -> IDENTIFIER EQUAL expression SEMICOLON
Rule 28    assignment -> IDENTIFIER compound_assignment expression SEMICOLON
Rule 29    assignment -> IDENTIFIER LBRAKET expression RBRAKET compound_assignment expression SEMICOLON
Rule 30    assignment -> IDENTIFIER LBRAKET expression RBRAKET EQUAL expression SEMICOLON
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression TIMES expression
Rule 34    expression -> expression DIVIDE expression2
Rule 35    expression -> LPAREN expression RPAREN
Rule 36    expression -> NUMBER
Rule 37    expression -> CHAR_LITERAL
Rule 38    expression -> CHAR
Rule 39    expression -> IDENTIFIER
Rule 40    expression -> IDENTIFIER LBRAKET expression RBRAKET
Rule 41    expression_list -> expression
Rule 42    expression_list -> expression COMMA expression_list
Rule 43    unitarymodifiers -> IDENTIFIER PLUS PLUS
Rule 44    unitarymodifiers -> IDENTIFIER MINUS MINUS
Rule 45    for_loop -> FOR LPAREN assignment condition SEMICOLON unitarymodifiers RPAREN LBRACE statement_list RBRACE
Rule 46    condition -> expression COMPARER expression
Rule 47    if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE
Rule 48    if_statement -> IF LPAREN condition RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 49    function_call -> PRINTF LPAREN STRING COMMA IDENTIFIER RPAREN SEMICOLON
Rule 50    function_call -> PRINTF LPAREN STRING RPAREN SEMICOLON
Rule 51    function_call -> PRINTF LPAREN STRING COMMA expression_list RPAREN SEMICOLON
Rule 52    function_call -> SCANF LPAREN STRING COMMA AMPERSAND IDENTIFIER RPAREN SEMICOLON
Rule 53    return_statement -> RETURN SEMICOLON
Rule 54    return_statement -> RETURN expression SEMICOLON

Terminals, with rules where they appear

AMPERSAND            : 52
CHAR                 : 22 38
CHAR_LITERAL         : 37
COMMA                : 16 42 49 51 52
COMPARER             : 46
DIVIDE               : 26 34
DOT                  : 
ELSE                 : 48
EQUAL                : 17 23 24 25 26 27 30
FLOAT                : 21
FOR                  : 45
HEADER               : 5
IDENTIFIER           : 15 16 17 27 28 29 30 39 40 43 44 49 52
IF                   : 47 48
INCLUDE              : 5
INT                  : 6 20
LBRACE               : 6 45 47 48 48
LBRAKET              : 19 29 30 40
LPAREN               : 6 35 45 47 48 49 50 51 52
MAIN                 : 6
MINUS                : 24 32 44 44
NUMBER               : 19 36
PLUS                 : 23 31 43 43
PRINTF               : 49 50 51
RBRACE               : 6 45 47 48 48
RBRAKET              : 19 29 30 40
RETURN               : 53 54
RPAREN               : 6 35 45 47 48 49 50 51 52
SCANF                : 52
SEMICOLON            : 17 18 19 27 28 29 30 45 49 50 51 52 53 54
STRING               : 49 50 51 52
TIMES                : 25 33
error                : 

Nonterminals, with rules where they appear

assignment           : 10 45
compound_assignment  : 28 29
condition            : 45 47 48
declaration          : 9
expression           : 17 27 28 29 29 30 30 31 31 32 32 33 33 34 35 40 41 42 46 46 54
expression2          : 34
expression_list      : 42 51
for_loop             : 11
function             : 1 2
function_call        : 13
identifier_list      : 16 18 19
if_statement         : 12
preprocesor_directive : 3 4
preprocesor_directives_list : 1 3
program              : 0
return_statement     : 14
statement            : 7 8
statement_list       : 6 7 45 47 48 48
type_specifier       : 17 18 19
unitarymodifiers     : 45

